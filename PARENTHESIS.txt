#include <stdio.h>
#include <string.h>
#define max 20

char stack[max];
int top = -1;
int n;

void push(char element) {
    if (top == n - 1) {
        printf("stack overflow");
    } else {
        top++;
        stack[top] = element;
    }
}

char pop() {
    if (top == -1) {
        printf("stack underflow");
    } else {
        char x = stack[top];
        top--;
        return x;
    }
}

int pair(char c1, char c2) {
    if (c1 == '{' && c2 == '}') {
        return 1;
    } else if (c1 == '[' && c2 == ']') {
        return 1;
    } else if (c1 == '(' && c2 == ')') {
        return 1;
    } else {
        return 0;
    }
}

int balanced(char* text) {
    int i;
    for (i = 0; i < n; i++) {
        if (text[i] == '(' || text[i] == '[' || text[i] == '{') {
            push(text[i]);
        } else if (text[i] == ')' || text[i] == ']' || text[i] == '}') {
            if (top == -1 || !pair(pop(), text[i])) {
                return 0;
            }
        }
    }
    if (top == -1) {
        return 1;
    } else {
        return 0;
    }
}

int main() {
    char text[max];
    printf("Enter expression: ");
    scanf("%s", text);
    n = strlen(text);
    if (balanced(text) == 1) {
        printf("Balanced");
    } else {
        printf("Not balanced");
    }
    return 0;
}